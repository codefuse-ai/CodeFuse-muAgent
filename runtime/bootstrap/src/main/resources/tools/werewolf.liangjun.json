{
  "id": 2,
  "gmtCreate": "2024-07-17T07:20:35.000+00:00",
  "gmtModified": "2024-07-17T07:20:35.000+00:00",
  "toolKey": "werewolf.liangjun",
  "toolDefinition": {"description":"演示tool的返回结果","name":"OPSGPT:MAIN_SITE:ToolSampleController.queryEditableResponse_response","parameters":{"description":"演示tool的返回结果","properties":{"button":{"description":"非必填，按钮名称，默认值为「重试」","requestType":"body","type":"string"},"pathVariable":{"description":"路径参数","requestType":"path","type":"string"},"requestParam":{"description":"请求参数","requestType":"query","type":"string"}},"required":[],"type":"object"},"result":{"description":"返回信息","properties":{},"type":"object"}},
  "toolId": null,
  "description": "狼人杀agent_梁军",
  "toolName": "agent_梁军",
  "pauseStatus": "EXECUTING",
  "transparentInfo": null,
  "intention": null,
  "input": null,
  "output": null,
  "exeNormal": true,
  "message": null,
  "requestGroovy": "import com.alipay.muagent.model.connector.http.HttpParameters\nimport com.google.gson.Gson\n\nclass Content {\n    String text;\n}\n\ndef getMemory() {\n    return binding.hasVariable(\"stepMemory\") ? (String) binding.getVariable(\"stepMemory\") : \"[null]\"\n}\n\ndef convertRequest(String request) {\n    def gson = new Gson()\n    String template = \"##狼人杀游戏说明##\\n这个游戏基于文字交流, 以下是游戏规则：\\n角色:\\n主持人也是游戏的组织者，你需要正确回答他的指示。游戏中有五种角色：狼人、平民、预言家、女巫，三个狼人，一个预言家，一个女巫，三个平民。\\n好人阵营: 平民、预言家和女巫。\\n游戏阶段：游戏分为两个交替的阶段：白天和黑夜。\\n黑夜：\\n在黑夜阶段，你与主持人的交流内容是保密的，你无需担心其他玩家和主持人知道你说了什么或做了什么。\\n- 如果你是狼人，你需要和队友一起选择袭击杀死一个玩家，在投票阶段你需要明确指出击杀对象，比如【我决定今晚击杀X号玩家XX】，不可以击杀狼人队友。\\n- 如果你是女巫，你有一瓶解药，可以拯救被狼人袭击的玩家，以及一瓶毒药，可以在黑夜后毒死一个玩家。解药和毒药只能使用一次。\\n- 如果你是预言家，你可以在每个晚上检查一个玩家是否是狼人，你应该明确告诉主持人你想要查验的玩家，比如【我想要查验X号玩家XX的身份】。\\n- 如果你是村民，你在夜晚无法做任何事情。\\n白天：\\n你与存活所有玩家（包括敌人）讨论。讨论结束后，玩家投票来淘汰一个自己怀疑是狼人的玩家。玩家必须明确投票，比如【我认为X号玩家XX是狼人，我投票给X号玩家XX】，获得最多票数的玩家将被淘汰，主持人将宣布XX玩家死亡。\\n游戏目标:\\n狼人的目标是杀死所有的好人阵营中的玩家，并且不被好人阵营的玩家识别出狼人身份；\\n好人阵营的玩家，需要找出并杀死所有的狼人玩家。\\n\\n##注意##\\n你正在参与狼人杀这个游戏，你应该感知自己的名字、座位和角色。\\n1. 若你的角色为狼人，白天的发言应该尽可能隐藏身份，夜晚则要明确击杀对象，不可击杀狼人队友。\\n2. 若你的角色属于好人阵营，白天的发言应该根据游戏进展尽可能分析出谁是狼人。\\n\\n##以下为目前游戏进展##\\n{memory}\\n\\n##发言格式##\\n你的回答中需要包含你的想法并给出简洁的理由，注意请有理有据，白天的发言尽量不要与别人的发言内容重复。发言的格式应该为Python可直接解析的jsonstr，格式如下：\\n{\\\"thought\\\": 以“我是【座位号】号玩家【名字】【角色】”开头，根据主持人的通知感知自己的【名字】、【座位号】、【角色】，根据游戏进展和自己游戏角色的当前任务分析如何发言，字数不超过150字, \\\"output\\\": 您的发言应该符合目前游戏进展和自己角色的逻辑，白天投票环节不能投票给自己。}\\n##开始发言##\\n\"\n\n    Content content = new Content()\n    content.text = template.replace(\"{memory}\", getMemory())\n\n    HttpParameters parameters = HttpParameters.builder().build()\n    parameters.setRequestBody(gson.toJson(content))\n    return gson.toJson(parameters)\n}\n\nconvertRequest(request)",
  "responseGroovy": "import com.google.gson.Gson\n\nclass LLMResponse {\n\n    int successCode;\n\n    String errorMessage;\n\n    String answer;\n}\n\ndef convertResponse(String response) {\n    def gson = new Gson()\n    LLMResponse lr = gson.fromJson(response, LLMResponse.class)\n\n    if (lr.getSuccessCode() == 1) {\n        return lr.getAnswer()\n    }\n\n    throw new RuntimeException(lr.getErrorMessage())\n}\n\nconvertResponse(response)",
  "summaryGroovy": null,
  "manifestSchema": {"api":{"type":"http"},"auth":{"type":"none"},"description_for_human":"演示tool的返回结果","description_for_model":"演示tool的返回结果","headers":{},"name_for_human":"ToolSampleController.queryEditableResponse_response","schema_version":"v1"},
  "toolApiPath": "OPSGPT./.POST",
  "toolProtocol": "HTTP",
  "serverUrl": null,
  "apiSchema": {"info":{"description":"演示tool的返回结果","title":"ToolSampleController.queryEditableResponse_response","version":"0.0.1"},"openapi":"3.0.0","paths":{"http":{"method":"POST","parameters":[{"in":"body","schema":{"$ref":"#ToolSampleController-queryEditableResponse-request-0"}},{"in":"query","schema":{"$ref":"#ToolSampleController-queryEditableResponse-request-1"}},{"in":"path","schema":{"$ref":"#ToolSampleController-queryEditableResponse-request-2"}}],"path":"/api/tool/sample/{pathVariable}","responses":{"200":{"application/json":{"$ref":"#/definitions/BaseResult_ToolResponse_"}}}}},"servers":[{"url":"http://ekgservice:3737/llm/generate"}]},
  "operatorCreate": "169704",
  "operatorModified": "169704",
  "version": "3",
  "owner": "169704",
  "deleted": null,
  "type": "OPEN",
  "status": "PROD_PUBLISHED",
  "vdbPk": "447890596018669520",
  "selectSamples": "[null]",
  "selectVars": "[{}]",
  "invokeType": "SYNC",
  "tag": "SINGLE_TOOL:OPSGPT:MAIN_SITE:ToolSampleController.queryEditableResponse_response",
  "toolExtraInfo": {
    "errMessage": null,
    "devVdbPk": "447890596018692596",
    "prodVdbPk": null,
    "summaryModel": null,
    "stepConfigList": null,
    "nexExtraInfo": null,
    "ispInfo": null,
    "rpcUniqueId": null
  },
  "pauseStatusList": null,
  "configMap": null
}